{
  "name": "open-headers",
  "version": "2.9.0",
  "description": "Companion app for Open Headers - Manages dynamic sources from files, environment variables, and HTTP endpoints",
  "main": "dist-webpack/main.js",
  "scripts": {
    "start": "electron .",
    "predev": "cross-env NODE_ENV=development webpack --config webpack.config.js --mode development",
    "dev": "cross-env NODE_ENV=development electron . --dev",
    "webpack": "cross-env NODE_ENV=production webpack --config webpack.config.js",
    "webpack:dev": "cross-env NODE_ENV=development webpack --config webpack.config.js --mode development --watch",
    "dev:react": "concurrently \"npm run webpack:dev\" \"npm run dev\"",
    "prebuild": "cross-env NODE_ENV=production npm run webpack",
    "build": "cross-env NODE_ENV=production electron-builder --dir",
    "build:skip-notarize": "cross-env NODE_ENV=production SKIP_NOTARIZATION=true npm run webpack && cross-env SKIP_NOTARIZATION=true electron-builder --dir",
    "dist": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder",
    "dist:win": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --win",
    "dist:win:skip-publish": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --win --publish never",
    "dist:mac": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --mac",
    "dist:mac:skip-publish": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --mac --publish never",
    "dist:mac:skip-notarize": "cross-env NODE_ENV=production SKIP_NOTARIZATION=true npm run webpack && cross-env SKIP_NOTARIZATION=true electron-builder --mac",
    "dist:linux": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --arm64",
    "dist:linux:app-image:arm64": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --arm64 --config.linux.target=AppImage",
    "dist:linux:skip-publish": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --arm64 --publish never",
    "dist:linux:deb": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --arm64 --config.linux.target=deb",
    "dist:linux:deb:x64": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --config.linux.target=deb",
    "dist:linux:deb:arm64": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --arm64 --config.linux.target=deb",
    "dist:linux:rpm": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --arm64 --config.linux.target=rpm",
    "dist:linux:rpm:x64": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --config.linux.target=rpm",
    "dist:linux:rpm:arm64": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --arm64 --config.linux.target=rpm",
    "dist:macos:no-rpm": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --x64 --arm64 --config.linux.target=deb --config.linux.target=AppImage --publish never",
    "dist:all": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder -mwl --x64 --arm64",
    "dist:dev": "cross-env NODE_ENV=development SKIP_NOTARIZATION=true npm run webpack && cross-env SKIP_NOTARIZATION=true electron-builder",
    "publish:mac": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --mac --publish always",
    "publish:win": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --win --publish always",
    "publish:linux": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder --linux --publish always",
    "publish:all": "cross-env NODE_ENV=production npm run webpack && cross-env electron-builder -mwl --x64 --arm64 --publish always"
  },
  "build": {
    "appId": "io.openheaders",
    "productName": "OpenHeaders",
    "directories": {
      "buildResources": "build",
      "output": "dist"
    },
    "files": [
      "dist-webpack/**/*"
    ],
    "asar": true,
    "compression": "maximum",
    "afterSign": "./scripts/notarize.js",
    "afterPack": "./scripts/afterPackHook.js",
    "extraResources": [
      {
        "from": "dev-app-update.yml",
        "to": "app-update.yml"
      },
      {
        "from": "build",
        "to": ".",
        "filter": [
          "*.png",
          "*.ico"
        ]
      },
      {
        "from": "src/renderer/images",
        "to": "images",
        "filter": [
          "*.png"
        ]
      }
    ],
    "asarUnpack": [
      "dist-webpack/renderer/images/**/*"
    ],
    "npmRebuild": false,
    "nodeGypRebuild": false,
    "extends": null,
    "removePackageScripts": true,
    "win": {
      "target": "nsis",
      "artifactName": "${productName}-${version}-Setup.${ext}",
      "icon": "build/icon.ico"
    },
    "mac": {
      "category": "public.app-category.developer-tools",
      "icon": "build/icon.icns",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "type": "distribution",
      "notarize": false,
      "forceCodeSigning": false,
      "darkModeSupport": true,
      "extendInfo": {
        "CFBundleDisplayName": "Open Headers - Dynamic Sources",
        "CFBundleName": "OpenHeaders",
        "CFBundleIdentifier": "io.openheaders"
      },
      "target": [
        {
          "target": "dmg",
          "arch": [
            "x64",
            "arm64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "artifactName": "${productName}-${version}-mac-${arch}.${ext}"
    },
    "linux": {
      "target": [
        "deb",
        "rpm",
        "AppImage"
      ],
      "icon": "build/icon.png",
      "category": "Utility;Development;Network",
      "executableName": "open-headers",
      "maintainer": "Daniel Tirzuman <github@tirzuman.com>",
      "desktop": {
        "Name": "OpenHeaders",
        "Comment": "Dynamic sources for Open Headers browser extension",
        "Terminal": false,
        "Categories": "Utility;Development;Network"
      },
      "synopsis": "Manage dynamic sources from files, environment variables, and HTTP endpoints",
      "description": "Companion app for the Open Headers browser extension that manages dynamic sources from files, environment variables, and HTTP endpoints."
    },
    "deb": {
      "depends": [
        "libgtk-3-0",
        "libnotify4",
        "libnss3",
        "libxss1",
        "libxtst6",
        "xdg-utils",
        "libatspi2.0-0",
        "libuuid1",
        "libsecret-1-0"
      ],
      "fpm": [
        "--deb-recommends=libgtk-3-0",
        "--deb-recommends=libnotify4",
        "--deb-recommends=libnss3",
        "--deb-recommends=libxss1",
        "--deb-recommends=libxtst6",
        "--deb-recommends=xdg-utils",
        "--deb-recommends=libatspi2.0-0",
        "--deb-recommends=libuuid1",
        "--deb-recommends=libsecret-1-0"
      ],
      "artifactName": "${name}_${version}_${arch}.${ext}",
      "compression": "xz",
      "priority": "optional",
      "afterInstall": "./scripts/debian/postinst"
    },
    "rpm": {
      "artifactName": "${name}-${version}.${arch}.rpm",
      "depends": [
        "gtk3",
        "libnotify",
        "nss",
        "libXScrnSaver",
        "libXtst",
        "xdg-utils",
        "at-spi2-core",
        "libuuid",
        "libsecret"
      ],
      "fpm": [
        "--rpm-rpmbuild-define=_build_id_links none",
        "--rpm-os=linux",
        "--rpm-rpmbuild-define=_binary_payload w2.xzdio",
        "--rpm-rpmbuild-define=_binary_filedigest_algorithm 2",
        "--rpm-rpmbuild-define=_source_filedigest_algorithm 2"
      ]
    },
    "appImage": {
      "artifactName": "${productName}-${version}-${arch}.${ext}",
      "desktop": {
        "Name": "OpenHeaders",
        "Comment": "Dynamic sources for Open Headers browser extension",
        "Categories": "Utility;Development;Network"
      }
    },
    "nsis": {
      "oneClick": true,
      "perMachine": false,
      "artifactName": "${productName}-${version}-Setup.${ext}"
    },
    "dmg": {
      "format": "ULFO",
      "writeUpdateInfo": false,
      "artifactName": "${productName}-${version}-mac-${arch}.${ext}",
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "publish": {
      "provider": "github",
      "owner": "OpenHeaders",
      "repo": "open-headers-app"
    }
  },
  "dependencies": {
    "@ant-design/icons": "^5.2.6",
    "antd": "^5.13.2",
    "auto-launch": "^5.0.6",
    "chokidar": "^3.5.3",
    "electron-is-dev": "^2.0.0",
    "electron-log": "^5.4.0",
    "electron-updater": "^6.6.2",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "ws": "^8.16.0"
  },
  "devDependencies": {
    "@babel/core": "^7.23.7",
    "@babel/preset-env": "^7.23.7",
    "@babel/preset-react": "^7.23.3",
    "@electron/notarize": "^3.0.1",
    "@octokit/rest": "^21.1.1",
    "babel-loader": "^9.1.3",
    "bufferutil": "^4.0.8",
    "concurrently": "^8.2.2",
    "copy-webpack-plugin": "^12.0.2",
    "cross-env": "^7.0.3",
    "css-loader": "^6.9.0",
    "electron": "^28.1.3",
    "electron-builder": "^25.1.8",
    "html-webpack-plugin": "^5.6.3",
    "less": "^4.2.0",
    "less-loader": "^12.1.0",
    "node-polyfill-webpack-plugin": "^4.1.0",
    "style-loader": "^3.3.4",
    "terser-webpack-plugin": "^5.3.10",
    "utf-8-validate": "^6.0.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "author": "Daniel Tirzuman <github@tirzuman.com>",
  "license": "MIT"
}
